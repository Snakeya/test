C语言中的可重入函数是指可以在多个任务或中断同时调用而不会产生冲突的函数。
可重入函数必须满足以下几个条件：

不使用全局变量：全局变量在多任务或中断环境中可能被同时访问和修改，
因此可重入函数不应该依赖于全局变量。如果需要使用状态信息或参数，则应该将其以参数的形式传递给函数。

不使用静态变量：静态变量在函数调用之间保持其值，因此如果可重入函数使用静态变量，
则可能会导致函数执行的结果受到之前调用的影响。

不使用非重入函数：如果可重入函数调用了另一个非重入函数，那么它自身也将成为非重入函数。
因此，在编写可重入函数时要注意它所调用的其他函数是否也是可重入的。

不使用全局数据结构：如果可重入函数使用全局数据结构，那么不同任务或中断对该数据结构的访问可能导致冲突。
因此，可重入函数应该使用局部或动态分配的数据结构。

不依赖于中断或上下文状态：可重入函数应该是独立的，不依赖于特定的中断或上下文状态。
它应该能够在任何时间点被调用，并正确地完成其任务。

需要注意的是，编写可重入函数需要特别小心和谨慎，并且需要考虑特定的应用场景和需求。
在多任务或中断环境中使用可重入函数可以提高代码的可靠性和可维护性。